##
rm(list = ls())
###########################################
###########################################
library(faraway)
data(orings)

plot( orings$temp, orings$damage/6, ylim=c(0,1), xlim=c(25, 85), xlab="temp", ylab="probability of damage")
lmod <- lm(damage/6 ~ temp, data=orings) 
abline(lmod)

##
logitmod <- glm(cbind(damage, 6-damage) ~ temp, family=binomial, data=orings)
summary(logitmod)

probitmod <- glm(cbind(damage, 6-damage) ~ temp, family=binomial(link=probit), data=orings)
summary(probitmod)

## let''s plot
plot( orings$temp, orings$damage/6, ylim=c(0,1), xlim=c(25, 85), xlab="temp", ylab="probability of damage")
abline(lmod)

x <- 25:81 #temps
lines(x, ilogit(logitmod$coef[1] + logitmod$coef[2]*x), col="blue", lwd=2)
lines(x, pnorm(probitmod$coef[1] + probitmod$coef[2]*x), col="red", lwd=2)

## Let''s predict the probaility of failure for temp=31
ilogit(logitmod$coef[1] + logitmod$coef[2]*31)
pnorm(probitmod$coef[1] + probitmod$coef[2]*31)



## Deviance
D.logit <- deviance(logitmod)
D.probit <- deviance(probitmod)

D.logit
D.probit


## degrees of freedom
D.df <- 23-2

##
1-pchisq(D.logit, D.df)
1-pchisq(D.probit, D.df)

####################################################
build logit and probit model for binomial data; 
use ilogit(t(X)%*%b) and pnorm(t(X)%*%b) to get the prediction or estimation of pi; 
deviance diagnostic; great than 0.05, then not reject the smaller one; 
deviance is twice of the diff between loglikekihood of large model and that of the smaller one; 
note that when build glm for binomial data, we need to combind(damage, 6-damage)
######################################################
